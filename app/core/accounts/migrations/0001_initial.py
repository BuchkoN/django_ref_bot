# Generated by Django 5.0.6 on 2024-05-23 11:39

import app.core.accounts.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(blank=True, max_length=250, unique=True, verbose_name='Username')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Date joined')),
                ('telegram_id', models.BigIntegerField(blank=True, null=True, verbose_name='Telegram ID')),
                ('referral_link', models.URLField(blank=True, null=True, verbose_name='Referral link')),
                ('wallet_address', models.CharField(max_length=250, null=True, verbose_name='Wallet address')),
                ('language', models.CharField(choices=[('ru', 'Русский'), ('en', 'Английский')], default='en', verbose_name='Interface language')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'Не прошел воронку'), (2, 'Прошел воронку'), (3, 'Приобрел бесплатный продукт'), (4, 'Приобрел платный продукт')], default=1, verbose_name='Status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='Staff status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ['-date_joined'],
                'indexes': [models.Index(fields=['telegram_id'], name='accounts_us_telegra_de466c_idx')],
            },
            managers=[
                ('objects', app.core.accounts.models.UserManager()),
            ],
        ),
    ]
